##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This playbook deletes the DLT network on existing Kubernetes clusters which has been created
#  using Hyperledger Bevel.
# Please use the same network.yaml to run this playbook as used for deploy-network.yaml
###########################################################################################
# THIS PLAYBOOK DELETES EVERYTHING, EVEN NAMESPACES and FLUX
###########################################################################################
---
  # This will apply to ansible_provisioners. /etc/ansible/hosts should be configured with this group
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
    # Delete Vault and Kubernetes secrets.
    - include_role: 
        name: "delete/vault_secrets"
      vars:
        component_name: "{{ item.name | lower }}-net"
        org_name: "{{ item.name | lower }}"
        component_type: "{{ item.type | lower }}"
        services: "{{ item.services }}"
        kubernetes: "{{ item.k8s }}"
      loop: "{{ network['organizations'] }}"

    # Uninstalling Flux is needed so that everything is clean
    # remove this if not needed
    ##Deletes Deployments related to flux
    - name: Delete flux deployments
      k8s:
        state: absent
        api_version: v1
        kind: Deployment
        namespace: flux-{{ network.env.type }}
        name: "{{ item[0] }}"
        force: yes
        kubeconfig: "{{ kubernetes.config_file }}"
      vars:
        kubernetes: "{{ item[1].k8s }}"
      with_nested:
        - ["helm-controller", "kustomize-controller", "notification-controller", "source-controller"]
        - "{{ network['organizations'] }}"
      ignore_errors: yes

    ##Deletes services related to flux  
    - name: Delete flux services
      k8s:
        state: absent
        api_version: v1
        kind: Service
        namespace: flux-{{ network.env.type }}
        name: "{{ item[0] }}"
        kubeconfig: "{{ kubernetes.config_file }}"
      vars:
        kubernetes: "{{ item[1].k8s }}"
      with_nested:
        - ["webhook-receiver", "notification-controller", "source-controller"]
        - "{{ network['organizations'] }}"
      ignore_errors: yes

    ##Delete Network Policies related to flux
    - name: Delete flux Network Policies
      k8s:
        state: absent
        api_version: v1
        kind: NetworkPolicy
        namespace: flux-{{ network.env.type }}
        name: "{{ item[0] }}"
        kubeconfig: "{{ kubernetes.config_file }}"
      vars:
        kubernetes: "{{ item[1].k8s }}"
      with_nested:
        - ["allow-egress", "allow-scraping", "allow-webhooks"]
        - "{{ network['organizations'] }}"
      ignore_errors: yes

    ##Deletes serviceAccount related to flux
    - name: Delete flux ServiceAccount
      k8s:
        state: absent
        api_version: v1
        kind: ServiceAccount
        namespace: flux-{{ network.env.type }}
        name: "{{ item[0] }}"
        kubeconfig: "{{ kubernetes.config_file }}"
      vars:
        kubernetes: "{{ item[1].k8s }}"
      with_nested:
        - ["helm-controller", "kustomize-controller", "notification-controller", "source-controller"]
        - "{{ network['organizations'] }}"
      ignore_errors: yes

    ##Deletes flux namespace 
    - name: delete flux namespace
      k8s:
        name: flux-{{ network.env.type }}
        api_version: v1
        kind: Namespace
        state: absent
        kubeconfig: "{{ kubernetes.config_file }}"
      vars:
        kubernetes: "{{ item.k8s }}"
      loop: "{{ network['organizations'] }}"
      ignore_errors: yes

    # Delete Helmreleases
    # Change this file if you have new Helreleases to delete
    - include_role:
        name: "delete/flux_releases"
      vars:
        component_name: "{{ item.name | lower }}-net"
        org_name: "{{ item.name | lower }}"
        component_type: "{{ item.type | lower}}"
        component_services: "{{ item.services }}"
        kubernetes: "{{ item.k8s }}"
      loop: "{{ network['organizations'] }}"

    # Delete genesis
    - include_role:
        name: "delete/genesis"
      vars:
        component_name: "{{ item.name | lower }}-net"
      loop: "{{ network['organizations'] }}"
      when: item.type == "orderer"

    # Delete Gitops file and check-in
    - include_role:
        name: "delete/gitops_files"
      vars:
        gitops: "{{ item.gitops }}"
        release_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/{{ item.name|lower }}"
        flux_mainfest_dir: "{{playbook_dir}}/../../../{{item.gitops.release_dir}}/flux-{{ network.env.type }}"
      loop: "{{ network['organizations'] }}"

    # delete orderer certs directory
    - name: Remove orderers certs directory
      file:
        path:  "{{ playbook_dir }}/../charts/catools/certs"
        state: absent

    # delete build directory
    - name: Remove build directory
      file:
        path: "./build"
        state: absent
  vars: #These variables can be overriden from the command line
    privilege_escalate: false           #Default to NOT escalate to root privledges
    install_os: "linux"                 #Default to linux OS
    install_arch:  "amd64"              #Default to amd64 architecture
    bin_install_dir: "~/bin"            # Default to /bin install directory for binaries
